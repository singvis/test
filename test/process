#coding:utf-8
import os , time , random
from multiprocessing import Process,Queue
from multiprocessing import Pool
import subprocess

'单进程'
# def run_proc(name):
#     print(' Run child process %s (%s)...' %(name , os.getpid()))
# if __name__ == '__main__':
#     print('Parent process %s.' % os.getpid())
#     '创建子进程'
#     p = Process(target=run_proc , args=('test',))
#     p.start()
#     p.join()
#     print('  Child process end.')

# '多子进程'
# def run_proc(name):
#     print(' Run task %s (%s)...' %(name , os.getpid()))
#     start = time.time()
#     time.sleep(random.random()*3)
#     end = time.time()
#     print('Task %s runs %0.2f seconds.' % (name ,(end - start)))
#
# if __name__ == '__main__':
#     print('Parent process %s.' % os.getpid())
#     p = Pool(4)
#     for i in range(5):
#         p.apply_async(run_proc,args=(i,))
#     print('Waiting for all subprocesses done....')
#     p.close()
#     p.join()
#     print('All processes done.')

'进程间通信'
def write(q):
    print('Process to write:%s' % os.getpid())
    for value in ['A' , 'B' , 'C' ,'D']:
        print('Put %s to queue...' %value)
        q.put(value)
        time.sleep(random.random())
def read(q):
    print('Process to read:%s' % os.getpid())
    while True:
        value = q.get(True)
        print('Get %s from queue...' % value)

if __name__ == '__main__':
    q = Queue()
    pw = Process(target=write , args=(q,))
    pr = Process(target=read , args=(q,))
    pw.start()
    pr.start()
    pw.join()
    pr.terminate()